name: financetool-demo

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: financial_tracker
    ports:
      - "5433:5432"            # demo DB on host 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d financial_tracker"]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data_demo:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: >
      bash -lc "FLASK_DEBUG=0 flask run --host 0.0.0.0 --port 5000"
    environment:
      APP_ENV: demo
      FLASK_APP: backend.app:create_app
      FLASK_ENV: production
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: "5000"
      DATABASE_URL: postgresql+psycopg2://postgres:admin@db:5432/financial_tracker
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://postgres:admin@db:5432/financial_tracker
      PRINT_ROUTES: "1"         # set to "0" if you don’t want the route dump
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend   # live code mount for instant route changes
    ports:
      - "5001:5000"              # demo API on host 5001
    healthcheck:
      test:
        - CMD-SHELL
        - |
          python - <<'PY'
          import urllib.request, sys
          try:
              urllib.request.urlopen('http://localhost:5000/api/health', timeout=2)
              sys.exit(0)
          except Exception:
              sys.exit(1)
          PY
      interval: 3s
      timeout: 3s
      retries: 50
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app/frontend
    environment:
      VITE_API_BASE_URL: "http://localhost:5001"   # browser → host (fine)
      VITE_API_PROXY_TARGET: "http://backend:5000" # Vite (in container) → backend service
      VITE_IN_DOCKER: "1"
      PLAYWRIGHT_SKIP_INSTALL: "1"                 # optional: skip huge downloads

    command: >
      sh -lc '
        set -e
        echo "[pwd]"; pwd
        echo "[ls]"; ls -la
        if [ ! -f package.json ]; then
          echo "[ERROR] /app/frontend/package.json not found. Check volumes/working_dir.";
          sleep 999999
        fi
        if [ -f package-lock.json ]; then
          npm ci --no-audit --no-fund;
        else
          npm install --no-audit --no-fund;
        fi
        exec npx vite --host 0.0.0.0 --port 5173 --strictPort
      '
    volumes:
      - ./frontend:/app/frontend   # maps C:\Personal\Janne\Investing\FinanceTool\frontend
    ports:
      - "5174:5173"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pg_data_demo:
