name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel older runs for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changed parts
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
              - '.eslint*'
              - 'eslint.config.*'
              - 'package*.json'
              - 'vite.config.*'
              - 'tsconfig*.json'

  backend:
    name: Backend (Ruff + deps install)
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements*.txt

      - name: Install backend dependencies
        run: |
          python -m pip install -U pip
          if [ -f backend/requirements-dev.txt ]; then
            pip install -r backend/requirements-dev.txt
          else
            pip install -r backend/requirements.txt
            # ensure ruff available even if not in reqs
            pip install ruff
          fi

      - name: Ruff (lint)
        working-directory: backend
        run: |
          ruff --version
          ruff check . --output-format=github

      # Uncomment later when you add tests
      # - name: Run backend tests
      #   working-directory: backend
      #   run: |
      #     pip install pytest
      #     pytest -q

  frontend:
    name: Frontend (ESLint + build)
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: ESLint
        working-directory: frontend
        run: npm run lint

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
