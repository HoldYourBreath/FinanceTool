name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "backend/**"
      - "frontend/**"
      - "tests/**"
      - "playwright.config.*"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - "frontend/**"
      - "tests/**"
      - "playwright.config.*"
      - ".github/workflows/ci.yml"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: backend/requirements*.txt

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install ruff pytest || true

      - name: Ruff (lint)
        run: ruff check .
        continue-on-error: true

      - name: Tests
        run: pytest -q
        continue-on-error: true

  frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

  e2e:
    name: Playwright E2E (root)
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    env:
      CI: true
      SQLALCHEMY_DATABASE_URI: sqlite:///ci.db
      FLASK_APP: app
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install Playwright browsers for Linux, w/o using a lockfile
      - name: Install Playwright (Chromium)
        run: npx -y @playwright/test@1.48.2 install --with-deps chromium

      # Start backend (adjust health URL if needed)
      - name: Start backend
        working-directory: backend
        run: |
          nohup python -m flask run --host 127.0.0.1 --port 5001 > ../flask.log 2>&1 &
          for i in {1..60}; do
            curl -fsS http://127.0.0.1:5001/health >/dev/null 2>&1 && break
            sleep 1
          done

      # Start frontend preview
      - name: Start frontend preview
        working-directory: frontend
        run: |
          nohup npm run preview -- --host 127.0.0.1 --port 5173 > ../frontend-preview.log 2>&1 &
          for i in {1..60}; do
            curl -fsS http://127.0.0.1:5173 >/dev/null 2>&1 && break
            sleep 1
          done

      - name: List tests (debug)
        continue-on-error: true
        run: npx -y @playwright/test@1.48.2 test --list --config=playwright.config.ts

      - name: Run tests (chromium)
        run: npx -y @playwright/test@1.48.2 test --project=chromium --config=playwright.config.ts

      - name: Upload Playwright HTML report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload server logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: |
            frontend-preview.log
            flask.log
          if-no-files-found: ignore

