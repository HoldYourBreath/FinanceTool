name: E2E

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - "backend/**"
      - "tests/**"
      - ".github/workflows/e2e.yml"
  pull_request:
    paths:
      - "frontend/**"
      - "backend/**"
      - "tests/**"
      - ".github/workflows/e2e.yml"
  workflow_dispatch:

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  playwright:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: financial_tracker
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # Backend deps
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: backend/requirements*.txt

      - name: Install backend deps
        run: |
          python -m pip install -U pip
          pip install -r backend/requirements.txt

      # If you use migrations, run them (adjust FLASK_APP if needed)
      # - name: DB migrate
      #   working-directory: backend
      #   env:
      #     DATABASE_URL: postgresql://postgres:postgres@localhost:5432/financial_tracker
      #     FLASK_APP: app.py
      #   run: flask db upgrade

      # Frontend deps
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Run Playwright tests
        working-directory: frontend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/financial_tracker
          FLASK_APP: backend/app.py   # adjust if different
          FLASK_ENV: production
        run: npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
