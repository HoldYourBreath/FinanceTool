services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: financial_tracker
    ports:
      - "5432:5432"        # optional: expose to host (keeps your script-compatible creds)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d financial_tracker"]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: bash -lc "FLASK_DEBUG=1 flask run --host 0.0.0.0 --port 5000"
    environment:
      # match your scriptâ€™s envs
      APP_ENV: dev
      FLASK_APP: backend.app:create_app
      FLASK_ENV: dev
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: "5000"
      DATABASE_URL: postgresql+psycopg2://postgres:admin@db:5432/financial_tracker
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://postgres:admin@db:5432/financial_tracker
      PRINT_ROUTES: "1"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # live-reload backend code
      - ./backend:/app/backend
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/api/health || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 50

  frontend:
    image: node:20-alpine
    working_dir: /app/frontend
    environment:
      # same as your script
      VITE_API_BASE_URL: "http://localhost:5000"
    command: sh -lc "npm ci --no-audit --no-fund && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app/frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy

volumes:
  pg_data:
